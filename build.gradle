buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.sample'
version '1.0-SNAPSHOT'
sourceCompatibility = 11

repositories {
    mavenCentral()
}

// テンポラリディレクトリのパスを定義する
//ext.domaResourcesDir = "${buildDir}/tmp/doma-resources"

// domaが注釈処理で参照するリソースをテンポラリディレクトリに抽出
//task extractDomaResources(type: Copy, dependsOn: processResources)  {
//    from processResources.destinationDir
//    include 'doma.compile.config'
//    include 'META-INF/**/*.sql'
//    include 'META-INF/**/*.script'
//    into domaResourcesDir
//}

// テンポラリディレクトリ内のリソースをcompileJavaタスクの出力先ディレクトリにコピーする
//task copyDomaResources(type: Copy, dependsOn: extractDomaResources)  {
//    from domaResourcesDir
//    into compileJava.destinationDir
//}
//
//compileJava {
//    // 上述のタスクに依存させる
//    dependsOn copyDomaResources
//    // テンポラリディレクトリをcompileJavaタスクの入力ディレクトリに設定する
//    inputs.dir domaResourcesDir
//    options.encoding = 'UTF-8'
//}

dependencies {
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    runtimeOnly('mysql:mysql-connector-java')

    implementation('org.seasar.doma.boot:doma-spring-boot-starter:1.4.0')
    annotationProcessor('org.seasar.doma:doma-processor:2.35.0')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.projectlombok:lombok')
}
